[{"/Users/artrudov/WebstormProjects/auth_page/src/index.tsx":"1","/Users/artrudov/WebstormProjects/auth_page/src/reportWebVitals.ts":"2","/Users/artrudov/WebstormProjects/auth_page/src/views/app/App.tsx":"3","/Users/artrudov/WebstormProjects/auth_page/src/views/auth/components/login/Login.tsx":"4","/Users/artrudov/WebstormProjects/auth_page/src/views/auth/components/register/Register.tsx":"5"},{"size":503,"mtime":1607108046173,"results":"6","hashOfConfig":"7"},{"size":439,"mtime":1607108548121,"results":"8","hashOfConfig":"9"},{"size":354,"mtime":1607108995071,"results":"10","hashOfConfig":"7"},{"size":259,"mtime":1607108975253,"results":"11","hashOfConfig":"7"},{"size":257,"mtime":1607108975255,"results":"12","hashOfConfig":"7"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"uo04z3",{"filePath":"15","messages":"16","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1yjpyao",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"/Users/artrudov/WebstormProjects/auth_page/src/index.tsx",[],"/Users/artrudov/WebstormProjects/auth_page/src/reportWebVitals.ts",["24","25"],"/Users/artrudov/WebstormProjects/auth_page/src/views/app/App.tsx",[],"/Users/artrudov/WebstormProjects/auth_page/src/views/auth/components/login/Login.tsx",[],"/Users/artrudov/WebstormProjects/auth_page/src/views/auth/components/register/Register.tsx",[],["26","27","28","29","30"],{"ruleId":"31","severity":2,"message":"32","line":5,"column":7,"nodeType":"33","messageId":"34","endLine":5,"endColumn":18},{"ruleId":"35","severity":2,"message":"36","line":6,"column":5,"nodeType":"37","messageId":"38","endLine":12,"endColumn":7,"suggestions":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},"@typescript-eslint/strict-boolean-expressions","Unexpected nullable object value in conditional. An explicit null check is required.","Identifier","conditionErrorNullableObject","@typescript-eslint/no-floating-promises","Promises must be handled appropriately or explicitly marked as ignored with the `void` operator.","ExpressionStatement","floatingVoid",["50"],"handle-callback-err",[],"no-negated-in-lhs",["51"],"no-new-require",[],"no-path-concat",[],"no-native-reassign",["52"],{"messageId":"53","fix":"54","desc":"55"},"no-unsafe-negation","no-global-assign","floatingFixVoid",{"range":"56","text":"57"},"Add void operator to ignore.",[186,400],"void import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })"]